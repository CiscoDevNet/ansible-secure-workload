---
- name: Converge
  hosts: localhost
  connection: local

  tasks:
    - name: "Include ansible-module"
      include_role:
        name: "ansible-module"

    - name: read variables from the environment that are set in the molecule.yml
      set_fact:
        ansible_host: "{{ lookup('env', 'TETRATION_SERVER_ENDPOINT') }}"
        api_key: "{{ lookup('env', 'TETRATION_API_KEY') }}"
        api_secret: "{{ lookup('env', 'TETRATION_API_SECRET') }}"
      no_log: True

    - name: put the variables in the required format
      set_fact:
        provider_info:
          api_key: "{{ api_key }}"
          api_secret: "{{ api_secret }}"
          server_endpoint: "{{ ansible_host }}"
      no_log: True

    - name: set test variables
      set_fact:
        root_scope: "{{ lookup('env', 'TETRATION_ROOT_SCOPE_NAME') }}"
        root_scope_id: "{{ lookup('env', 'TETRATION_ROOT_SCOPE_ID') }}"
    # -----

    - name: Test - Create a primary app scope
      tetration_application:
        app_name: test_cicd_app
        app_scope_id: "{{ root_scope_id }}"
        description: "test_cicd_app description"
        alternate_query_mode: false
        primary: false
        state: present
        provider: "{{ provider_info }}"
      register: output

    - name: Store - Create a primary app scope
      set_fact:
        app_id: "{{ output.object.id }}"
        app_version: "{{ output.object.latest_adm_version }}"

    - name: Output - Create a primary app scope
      debug:
        var: item
      with_items:
        - "{{ app_id }}"
        - "{{ app_version }}"
    # -----

    - name: Test - Query Current Status
      tetration_application_policy_catchall:
        app_id: "{{ app_id }}"
        version: "{{ app_version }}"
        state: query
        provider: "{{ provider_info }}"
      register: catchall_status

    - name: Output - Query Current Status
      debug:
        var: catchall_status

    - name: Verify - Query Current Status
      assert:
        that:
          - catchall_status.changed is false
          - catchall_status.failed is false
          - catchall_status.object.action == 'DENY'
    # -----

    - name: Test - Update Catchall Status
      tetration_application_policy_catchall:
        app_id: "{{ app_id }}"
        version: "{{ app_version }}"
        policy_action: 'ALLOW'
        state: update
        provider: "{{ provider_info }}"
      register: catchall_status

    - name: Output - Update Catchall Status
      debug:
        var: catchall_status

    - name: Verify - Update Catchall Status
      assert:
        that:
          - catchall_status.changed is true
          - catchall_status.failed is false
          - catchall_status.object.action == 'ALLOW'
    # -----

    - name: Test - Update Catchall Status no change
      tetration_application_policy_catchall:
        app_id: "{{ app_id }}"
        version: "{{ app_version }}"
        policy_action: 'ALLOW'
        state: update
        provider: "{{ provider_info }}"
      register: catchall_status

    - name: Output - Update Catchall Status no change
      debug:
        var: catchall_status

    - name: Verify - Update Catchall Status no change
      assert:
        that:
          - catchall_status.changed is false
          - catchall_status.failed is false
          - catchall_status.object.action == 'ALLOW'
    # -----

    - name: Cleanup - Delete primary app scope
      tetration_application:
        app_id: "{{ app_id }}"
        state: absent
        provider: "{{ provider_info }}"
      register: output
