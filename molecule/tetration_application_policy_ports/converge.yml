---
- name: Converge
  hosts: localhost
  connection: local

  tasks:
    - name: "Include ansible-module"
      include_role:
        name: "ansible-module"

    - name: read variables from the environment that are set in the molecule.yml
      set_fact:
        ansible_host: "{{ lookup('env', 'TETRATION_SERVER_ENDPOINT') }}"
        api_key: "{{ lookup('env', 'TETRATION_API_KEY') }}"
        api_secret: "{{ lookup('env', 'TETRATION_API_SECRET') }}"
      no_log: True 

    - name: put the variables in the required format
      set_fact:
        provider_info:
          api_key: "{{ api_key }}"
          api_secret: "{{ api_secret }}"
          server_endpoint: "{{ ansible_host }}"
      no_log: True 

    - name: set test variables
      set_fact:
        root_scope_id: 5ce71503497d4f2c23af85b7
        fixed_app_id: 5f76504c497d4f23eae657a7
        policy_id: 5f76530d755f025ccc89a772
# -----

    # - name: Test - Create a primary app scope 
    #   tetration_application:
    #     app_name: test_cicd_app
    #     app_scope_id: "{{ root_scope_id }}"
    #     description: "test_cicd_app description"
    #     alternate_query_mode: false
    #     primary: false 
    #     state: present
    #     provider: "{{ provider_info }}"
    #   register: output
    
    # - name: Store - Create a primary app scope 
    #   set_fact:
    #     app_id: "{{ output.object.id }}"
    
    # - name: Output - Create a primary app scope 
    #   debug:
    #     var: item
    #   with_items:
    #     - "{{ app_id }}"
    #     - "{{ output }}"
    
    # - name: Verify - Create a primary app scope 
    #   assert:
    #     that:
    #       - output.changed is true
    #       - output.object.id is defined
    #       - output.object.primary is false 
    #       - output.failed is false
# -----

    # - name: Test - Attempt to delete app while secondary 
    #   tetration_application:
    #     app_name: updated test_cicd_app
    #     state: absent
    #     provider: "{{ provider_info }}"
    #   register: output

    # - name: Output - Attempt to delete app while secondary 
    #   debug:
    #     var: output

    # - name: Verify - Attempt to delete app while secondary 
    #   assert:
    #     that:
    #       - output.failed is false
    #       - output.object.success is true
    #       - output.changed is true

    - name: get policy id
      tetration_rest:
        provider: "{{ provider_info }}"
        route: "applications/{{ fixed_app_id }}/policies"
        method: get
        params:
          version: '0'
      register: policy_info

    - name: log policy id
      debug:
        var: policy_info

    - name: Store - Store Profile ID 
      set_fact:
        policy_id: "{{ policy_info.json.absolute_policies[0].id }}"
        policy_version: "{{ policy_info.json.absolute_policies[0].version }}"
    
    - name: log policy id
      debug:
        var: policy_id 
    
# -----
    - name: test policy ports
      tetration_application_policy_ports:
        policy_id: "{{ policy_id }}"
        version: "{{ policy_version }}"
        proto_name: ICMP 
        description: Any other Protocol
        #start_port: 35
        #end_port: 35
        approved: true 
        state: present
        provider: "{{ provider_info }}"
      register: port_info

    - name: log new entry 
      debug:
        var: port_info 
