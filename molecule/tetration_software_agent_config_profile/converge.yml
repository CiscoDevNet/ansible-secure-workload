---
- name: Converge
  hosts: localhost
  connection: local

  tasks:
    - name: "Include ansible-module"
      include_role:
        name: "ansible-module"

    - name: read variables from the environment that are set in the molecule.yml
      set_fact:
        ansible_host: "{{ lookup('env', 'TETRATION_SERVER_ENDPOINT') }}"
        api_key: "{{ lookup('env', 'TETRATION_API_KEY') }}"
        api_secret: "{{ lookup('env', 'TETRATION_API_SECRET') }}"
      no_log: True

    - name: put the variables in the required format
      set_fact:
        provider_info:
          api_key: "{{ api_key }}"
          api_secret: "{{ api_secret }}"
          server_endpoint: "{{ ansible_host }}"
      no_log: True

    - name: set test variables
      set_fact:
        root_scope: "{{ lookup('env', 'TETRATION_ROOT_SCOPE_NAME') }}"
        root_scope_id: "{{ lookup('env', 'TETRATION_ROOT_SCOPE_ID') }}"
    # -----

    - name: Test - Query missing SW Agent Module
      tetration_software_agent_config_profile:
        name: test profile
        root_app_scope_id: "{{ root_scope_id }}"
        allow_broadcast: True
        allow_multicast: True
        auto_upgrade_opt_out: False
        cpu_quota_mode: 1
        cpu_quota_pct: 3
        data_plane_disabled: False
        enable_forensics: True
        enable_meltdown: False
        enable_pid_lookup: True
        enforcement_disabled: False
        preserve_existing_rules: False
        state: query
        provider: "{{ provider_info }}"
      register: output

    - name: Output - Query missing SW Agent Module
      debug:
        var: output

    - name: Test - Query missing SW Agent Module
      assert:
        that:
          - output.changed is false
          - output.failed is false
          - output.object | length == 0
    # -----

    - name: Test - Create SW Agent Module
      tetration_software_agent_config_profile:
        name: test profile
        root_app_scope_id: "{{ root_scope_id }}"
        allow_broadcast: True
        allow_multicast: True
        auto_upgrade_opt_out: False
        cpu_quota_mode: 0
        cpu_quota_pct: 3
        data_plane_disabled: False
        enable_forensics: True
        enable_meltdown: False
        enable_pid_lookup: True
        enforcement_disabled: False
        preserve_existing_rules: False
        state: present
        provider: "{{ provider_info }}"
      register: output

    - name: Output - Create SW Agent Module
      debug:
        var: output

    - name: Test - Create SW Agent Module
      assert:
        that:
          - output.changed is true
          - output.failed is false
          - output.object.id is defined
          - output.object.name == "test profile"
          - output.object.cpu_quota_mode == 0
          - output.object.cpu_quota_pct == 3
          - output.object.allow_broadcast is true

    - name: Store - Create SW Agent Module
      set_fact:
        profile_id: "{{ output.object.id }}"
    # -----

    - name: Test - Query SW Agent Module
      tetration_software_agent_config_profile:
        name: test profile
        root_app_scope_id: "{{ root_scope_id }}"
        state: query
        provider: "{{ provider_info }}"
      register: output

    - name: Output - Query SW Agent Module
      debug:
        var: output

    - name: Test - Query SW Agent Module
      assert:
        that:
          - output.changed is false
          - output.failed is false
          - output.object.id == profile_id
          - output.object.name == "test profile"
          - output.object.cpu_quota_mode == 0
    # -----

    - name: Test - Update SW Agent Module
      tetration_software_agent_config_profile:
        name: updated test profile
        id: "{{ profile_id }}"
        root_app_scope_id: "{{ root_scope_id }}"
        allow_broadcast: False
        cpu_quota_mode: 2
        cpu_quota_pct: 30
        state: present
        provider: "{{ provider_info }}"
      register: output

    - name: Output - Update SW Agent Module
      debug:
        var: output

    - name: Test - Update SW Agent Module
      assert:
        that:
          - output.changed is true
          - output.failed is false
          - output.object.id == profile_id
          - output.object.name == "updated test profile"
          - output.object.cpu_quota_mode == 2
          - output.object.cpu_quota_pct == 30
          - output.object.allow_broadcast is false
    # -----

    - name: Test - Query SW Agent Module after update
      tetration_software_agent_config_profile:
        id: "{{ profile_id }}"
        root_app_scope_id: "{{ root_scope_id }}"
        state: query
        provider: "{{ provider_info }}"
      register: output

    - name: Output - Query SW Agent Module after update
      debug:
        var: output

    - name: Test - Query SW Agent Module after update
      assert:
        that:
          - output.changed is false
          - output.failed is false
          - output.object.id == profile_id
          - output.object.name == "updated test profile"
          - output.object.cpu_quota_mode == 2
          - output.object.cpu_quota_pct == 30
          - output.object.allow_broadcast is false
    # -----

    - name: Test - Delete SW Agent Module
      tetration_software_agent_config_profile:
        id: "{{ profile_id }}"
        root_app_scope_id: "{{ root_scope_id }}"
        state: absent
        provider: "{{ provider_info }}"
      register: output

    - name: Output - Delete SW Agent Module
      debug:
        var: output

    - name: Validate - Delete SW Agent Module
      assert:
        that:
          - output.changed is true
          - output.failed is false
          - output.object.success is true
    # -----

    - name: Test - Delete SW Agent Module that's missing
      tetration_software_agent_config_profile:
        id: "{{ profile_id }}"
        root_app_scope_id: "{{ root_scope_id }}"
        state: absent
        provider: "{{ provider_info }}"
      register: output

    - name: Output - Delete SW Agent Module that's missing
      debug:
        var: output

    - name: Validate - Delete SW Agent Module that's missing
      assert:
        that:
          - output.changed is false
          - output.failed is false
          - output.object.success is not defined
