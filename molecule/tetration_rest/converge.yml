---
- name: Converge
  hosts: localhost
  connection: local

  tasks:
    - name: "Include ansible-module"
      include_role:
        name: "ansible-module"

    - name: read variables from the environment that are set in the molecule.yml
      set_fact:
        ansible_host: "{{ lookup('env', 'TETRATION_SERVER_ENDPOINT') }}"
        api_key: "{{ lookup('env', 'TETRATION_API_KEY') }}"
        api_secret: "{{ lookup('env', 'TETRATION_API_SECRET') }}"
      no_log: True 

    - name: put the variables in the required format
      set_fact:
        provider_info:
          api_key: "{{ api_key }}"
          api_secret: "{{ api_secret }}"
          server_endpoint: "{{ ansible_host }}"
      no_log: True 

    - name: set test variables
      set_fact:
        root_scope_id: 5ce71503497d4f2c23af85b7
# -----

    - name: Test - Get some data via get
      tetration_rest:
        provider: "{{ provider_info }}"
        method: get
        route: users
      register: output

    - name: Output - Get some data via get
      debug:
        var: output
    
    - name: Verify - Get some data via get
      assert:
        that:
          - output.status_code == 200
# -----

    - name: Test - Add some data via post
      tetration_rest:
        provider: "{{ provider_info }}"
        method: post 
        route: filters/inventories 
        payload:
          name: test filter for tetration_rest
          query:
            type: eq
            field: ip
            value: 172.16.200.100
          app_scope_id: "{{ root_scope_id }}" 
      register: output


    - name: Save - Add some data via post
      set_fact:
        new_inv_filter_id: "{{ output.json.id }}"

    - name: Output - Add some data via post
      debug:
        var: output

    - name: Verify - Add some data via post
      assert:
        that:
          - output.status_code == 200
# -----

    - name: Test - Update some data via put
      tetration_rest:
        provider: "{{ provider_info }}"
        method: put
        route: "filters/inventories/{{ new_inv_filter_id }}"
        payload:
          name: updated filter for tetration_rest
      register: output

    - name: Output - Update some data via put
      debug:
        var: output

    - name: Verify - Update some data via put
      assert:
        that:
          - output.status_code == 200
# -----

    - name: Test - Delete some data 
      tetration_rest:
        provider: "{{ provider_info }}"
        method: delete
        route: "filters/inventories/{{ new_inv_filter_id }}"
      register: output

    - name: Output - Delete some data 
      debug:
        var: output

    - name: Verify - Delete some data 
      assert:
        that:
          - output.status_code == 200
# -----

    - name: Test - Use invalid method 
      tetration_rest:
        provider: "{{ provider_info }}"
        method: patch
        route: "filters/inventories/{{ new_inv_filter_id }}"
      ignore_errors: true
      register: output

    - name: Output - Use invalid method 
      debug:
        var: output
    
    - name: Expected Output - Use invalid method 
      set_fact:
        expected_output: >-
          value of method must be one of: delete, get, post, put, got: patch

    - name: Verify - Use invalid method 
      assert:
        that:
          - output.msg == expected_output
